1.Application中的Context和Activity中的Context区别

Application的Context是一个全局静态变量，SDK的说明是只有当你引用这个context的生命周期超过了当前activity的生命周期，而和整个

应用的生命周期挂钩时，才去使用这个application的context。

一种推荐的用法就是应用程序注册广播broadcast时，使用这个context。

引用application context并不会导致内存泄漏。引用activity的context才会导致内存泄漏，当你的引用对象的生命周期超过了当前

activity的生命周期时，系统回收你的activity时发现还有一个context的强引用，而不去销毁这个activity，导致内存泄漏，在开发过程中

，需要非常重视这点（一个全局静态变量在引用context时一定要使用application的Context， 而不要使用activity的)

避免context相关的内存泄露，记住以下几点： （1）. 不要让生命周期长的对象引用activity context，即保证引用activity的对象要与activity本身生命周期是一样的 
（2）. 对于生命周期长的对象，可以使用application context 
（3）. 避免非静态的内部类，尽量使用静态类，避免生命周期问题，注意内部类对外部对象引用导致的生命周期变化
