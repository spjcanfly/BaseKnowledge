1.对于AS文件夹详细的认识
【build-tools】里面是不同版本(例如21.1.1)的build工具，这些工具包括了aapt打包工具、dx.bat、aidl.exe等等，就是buildToolsVersion的版本号
【platform】是存放不同API-level版本SDK目录的地方
【platform-tools】是一些android平台相关的工具，adb、fastboot等
【tools】是指的安卓开发相关的工具，例如android.bat、ddms.bat(Dalvik debug Monitor Service)、draw9patch.bat等等

2.关键字android:minSdkVersion，android:targetSdkVersion，android:maxSdkVersion
android:minSdkVersion：如果系统的API level低于android:minSdkVersion设定的值，那么android系统会阻止用户安装这个应用。
如果指明了这个属性，并且在项目中使用了高于这个API level的API， 那么会在编译时报错。
android:targetSdkVersion：如果平台的API Level高于你的应用程序中的targetSdkVersion属性指定的值，系统会开启兼容行为来确保
你的应用程序继续以期望的形式来运行。
android:maxSdkVersion：根据官方文档中的说明， 已经不再推荐使用这个属性，这个值已经不再起作用。


3.
Android 7.0 = API Level 24
Android 6.0 = API Level 23
Android 5.1.1 = API Level 22
Android 5.0.1 = API Level 21
Android 4.4W (L) = API Level 20
Android 4.4.2 = API Level 19
Android 4.3 = API Level 18
Android 4.2-4.2.2 = API Level 17
Android 4.1-4.1.1 = API Level 16
Android 4.0.3-4.0.4 = API Level 15
Android 4.0-4.0.2 = API Level 14
Android 3.2 = API Level 13
Android 3.1.x = API Level 12
Android 3.0.x = API Level 11
Android 2.3.3+ = API Level 10

4.没有打包，用来调试用的测试版的app存放的位置 

   app：build：outputs：apk 里面就是存放的

5.用mediaPlayer 播放assets中的音频文件

    private MediaPlayer mediaPlayer;
    private AssetManager am;
     am = getAssets();
     mediaPlayer = new MediaPlayer();
     AssetFileDescriptor fileDescriptor = am.openFd("02.mp3");
      //重用mediaPlayer对象，这一句很重要，如果要播放的音频多的话必须要用这个
     mediaPlayer.reset();
     mediaPlayer.setDataSource(fileDescriptor.getFileDescriptor(),fileDescriptor.getStartOffset(),fileDescriptor.getLength());
     mediaPlayer.prepare();
     mediaPlayer.start();
     mediaPlayer.stop();
     mediaPlayer.release();

6.StringBuild，拼接字符串，这个速度快，线程不安全
   sb.append();//连接字符串
   sb.insert();//在这个字符串中插入一些诸如空格的东西
   sb.toString();//有时候直接输出必须得先转化为字符串才行。

7.app登录验证
  Token是服务端生成的一串字符串，以作客户端进行请求的一个令牌，当第一次登录后，服务器生成一个Token便将此Token返回给客户端，
  以后客户端只需带上这个Token前来请求数据即可，无需再次带上用户名和密码。
  Token是在客户端频繁向服务端请求数据，服务端频繁的去数据库查询用户名和密码并进行对比，判断用户名和密码正确与否，并作出相应提示，
  在这样的背景下，Token便应运而生。Token的目的是为了减轻服务器的压力，减少频繁的查询数据库，使服务器更加健壮。
